{
  "predictor": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [
      {
        "augmented": true,
        "json_schema": "{\"properties\": {\"wireLength\": {\"title\": \"WireLength\", \"type\": \"number\"}, \"insulationType\": {\"title\": \"InsulationType\", \"type\": \"string\"}, \"voltageRating\": {\"title\": \"VoltageRating\", \"type\": \"number\"}, \"manufacturer\": {\"title\": \"Manufacturer\", \"type\": \"string\"}}, \"required\": [\"wireLength\", \"insulationType\", \"voltageRating\", \"manufacturer\"], \"title\": \"ElectricalWiringSpecs\", \"type\": \"object\"}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'properties': {'wireLength': {'title': 'WireLength', 'type': 'number'}, 'insulationType': {'title': 'InsulationType', 'type': 'string'}, 'voltageRating': {'title': 'VoltageRating', 'type': 'number'}, 'manufacturer': {'title': 'Manufacturer', 'type': 'string'}}, 'required': ['wireLength', 'insulationType', 'voltageRating', 'manufacturer'], 'title': 'ElectricalWiringSpecs', 'type': 'object'}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I am currently working on the electrical system of a new residential building project and need to specify the electrical wiring. Could you please provide me with a JSON object that details the specifications for the electrical wiring? The specifications should include the length of the wire needed, which is 200 meters, the type of insulation, which should be PVC, the voltage rating, which is 600V, and the manufacturer, which is 'CopperWire Inc.'.\", 'role': 'user'}]",
        "step_by_step_instructions": "1. Read the provided text information carefully to identify key-value pairs relevant to the JSON schema.\n2. Extract the following key-value pairs from the given prompt:\n   - wireLength (key) with value 200 (number)\n   - insulationType (key) with value PVC (string)\n   - voltageRating (key) with value 600 (number)\n   - manufacturer (key) with value 'CopperWire Inc.' (string)\n3. Construct a JSON object using curly braces `{}` to encapsulate the data, ensuring that all required fields are included as per the schema:\n   ```json\n   {\n     \"wireLength\": 200,\n     \"insulationType\": \"PVC\",\n     \"voltageRating\": 600,\n     \"manufacturer\": \"CopperWire Inc.\"\n   }\n   ```\n4. Verify that the constructed JSON object matches the provided schema by checking for required fields and data types:\n   - wireLength (number)\n   - insulationType (string)\n   - voltageRating (number)\n   - manufacturer (string)\n5. Ensure all keys are in double quotes, values are appropriately formatted as per their data type, and the overall structure adheres to JSON syntax rules.",
        "constructed_json_object": "```json\n{\n  \"wireLength\": 200,\n  \"insulationType\": \"PVC\",\n  \"voltageRating\": 600,\n  \"manufacturer\": \"CopperWire Inc.\"\n}\n```"
      },
      {
        "augmented": true,
        "json_schema": "{\"title\": \"SemiconductorProductionBatchTracking\", \"type\": \"object\", \"properties\": {\"batchID\": {\"title\": \"Batch ID\", \"type\": \"string\"}, \"productionDate\": {\"title\": \"Production Date\", \"type\": \"string\", \"format\": \"date\"}, \"yieldRate\": {\"title\": \"Yield Rate\", \"type\": \"number\", \"minimum\": 0, \"maximum\": 100}, \"defects\": {\"title\": \"Defects\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"batchID\", \"productionDate\", \"yieldRate\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'title': 'SemiconductorProductionBatchTracking', 'type': 'object', 'properties': {'batchID': {'title': 'Batch ID', 'type': 'string'}, 'productionDate': {'title': 'Production Date', 'type': 'string', 'format': 'date'}, 'yieldRate': {'title': 'Yield Rate', 'type': 'number', 'minimum': 0, 'maximum': 100}, 'defects': {'title': 'Defects', 'type': 'array', 'items': {'type': 'string'}}}, 'required': ['batchID', 'productionDate', 'yieldRate']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"Hello, I am a quality control analyst at MicroTech Semiconductor Inc. We need to track our semiconductor production batches more efficiently. For each batch, we need to record the unique batch ID, the date of production, the yield rate as a percentage, and a list of any defects identified. For instance, batch MT-2023-04-05 produced on April 5th, 2023, had a yield rate of 92.5% and defects including 'Gate oxide integrity', 'Photolithography misalignment', and 'Doping variability'. Could you please provide me with a JSON object that encapsulates these details according to our tracking requirements?\", 'role': 'user'}]",
        "step_by_step_instructions": "```json\n{\n  \"batchID\": \"MT-2023-04-05\",\n  \"productionDate\": \"2023-04-05\",\n  \"yieldRate\": 92.5,\n  \"defects\": [\n    \"Gate oxide integrity\",\n    \"Photolithography misalignment\",\n    \"Doping variability\"\n  ]\n}\n```",
        "constructed_json_object": "```json\n{\n  \"batchID\": \"MT-2023-04-05\",\n  \"productionDate\": \"2023-04-05\",\n  \"yieldRate\": 92.5,\n  \"defects\": [\n    \"Gate oxide integrity\",\n    \"Photolithography misalignment\",\n    \"Doping variability\"\n  ]\n}\n```"
      },
      {
        "augmented": true,
        "json_schema": "{\"title\": \"CosmeticProductEntry\", \"type\": \"object\", \"properties\": {\"productName\": {\"title\": \"Product Name\", \"type\": \"string\"}, \"productID\": {\"title\": \"Product ID\", \"type\": \"string\"}, \"ingredients\": {\"title\": \"Ingredients\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"price\": {\"title\": \"Price\", \"type\": \"number\", \"format\": \"float\"}}, \"required\": [\"productName\", \"productID\", \"ingredients\", \"price\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'title': 'CosmeticProductEntry', 'type': 'object', 'properties': {'productName': {'title': 'Product Name', 'type': 'string'}, 'productID': {'title': 'Product ID', 'type': 'string'}, 'ingredients': {'title': 'Ingredients', 'type': 'array', 'items': {'type': 'string'}}, 'price': {'title': 'Price', 'type': 'number', 'format': 'float'}}, 'required': ['productName', 'productID', 'ingredients', 'price']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"Please assist me in creating a JSON object for a new cosmetic product that we are planning to launch. The product is a hydrating facial cream named 'AquaPure Essence'. The unique product ID for this item is 'AP12345'. It contains a blend of natural ingredients including aloe vera, hyaluronic acid, and green tea extract. The price we've set for this product is $29.99. I need this information structured in a JSON format as per our database requirements.\", 'role': 'user'}]",
        "step_by_step_instructions": "```json\n{\n  \"productName\": \"AquaPure Essence\",\n  \"productID\": \"AP12345\",\n  \"ingredients\": [\n    \"aloe vera\",\n    \"hyaluronic acid\",\n    \"green tea extract\"\n  ],\n  \"price\": 29.99\n}\n```",
        "constructed_json_object": "```json\n{\n  \"productName\": \"AquaPure Essence\",\n  \"productID\": \"AP12345\",\n  \"ingredients\": [\n    \"aloe vera\",\n    \"hyaluronic acid\",\n    \"green tea extract\"\n  ],\n  \"price\": 29.99\n}\n```"
      },
      {
        "augmented": true,
        "json_schema": "{\"description\": \"A representation of an event\", \"type\": \"object\", \"required\": [\"startDate\", \"summary\"], \"properties\": {\"startDate\": {\"type\": \"string\", \"description\": \"Event starting time\"}, \"endDate\": {\"type\": \"string\", \"description\": \"Event ending time\"}, \"summary\": {\"type\": \"string\"}, \"location\": {\"type\": \"string\"}, \"recurrenceDate\": {\"type\": \"string\", \"description\": \"Recurrence date\"}, \"category\": {\"type\": \"string\"}}}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'description': 'A representation of an event', 'type': 'object', 'required': ['startDate', 'summary'], 'properties': {'startDate': {'type': 'string', 'description': 'Event starting time'}, 'endDate': {'type': 'string', 'description': 'Event ending time'}, 'summary': {'type': 'string'}, 'location': {'type': 'string'}, 'recurrenceDate': {'type': 'string', 'description': 'Recurrence date'}, 'category': {'type': 'string'}}}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I'm organizing a tech conference and I need to create a structured representation of the event details in JSON format. The event will start on April 15, 2023, and end on April 17, 2023. It's called 'Tech Innovators Conference 2023' and will take place at the Grand Tech Arena, located at 123 Innovation Drive, Techville. The event is set to recur annually on the same dates, with the next occurrence on April 15, 2024, and it falls under the 'Technology' category. Please provide me with a JSON object that adheres to the required schema.\", 'role': 'user'}]",
        "step_by_step_instructions": "```json\n{\n  \"startDate\": \"2023-04-15\",\n  \"summary\": \"Tech Innovators Conference 2023\",\n  \"endDate\": \"2023-04-17\",\n  \"location\": \"Grand Tech Arena, 123 Innovation Drive, Techville\",\n  \"recurrenceDate\": \"2024-04-15\",\n  \"category\": \"Technology\"\n}\n```",
        "constructed_json_object": "```json\n{\n  \"startDate\": \"2023-04-15\",\n  \"summary\": \"Tech Innovators Conference 2023\",\n  \"endDate\": \"2023-04-17\",\n  \"location\": \"Grand Tech Arena, 123 Innovation Drive, Techville\",\n  \"recurrenceDate\": \"2024-04-15\",\n  \"category\": \"Technology\"\n}\n```"
      }
    ],
    "signature_instructions": "\n    Proposed Instruction: Transform the provided text with key-value pairs into a valid JSON object that conforms to the specified JSON schema. Ensure all required fields are included and that data types match the expected format in the schema. Use curly braces to encapsulate your resulting JSON structure, commas to separate items within an array, colons to separate keys from values, and quotation marks for string literals.\n    ",
    "signature_prefix": "Constructed JSON Object:\n```json\n"
  }
}