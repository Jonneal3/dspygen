{
  "predictor": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [
      {
        "augmented": true,
        "json_schema": "{\"title\": \"ApparelSizeProfile\", \"type\": \"object\", \"properties\": {\"chest\": {\"title\": \"Chest\", \"type\": \"number\"}, \"waist\": {\"title\": \"Waist\", \"type\": \"number\"}, \"hips\": {\"title\": \"Hips\", \"type\": \"number\"}, \"inseam\": {\"title\": \"Inseam\", \"type\": \"number\"}}, \"required\": [\"chest\", \"waist\", \"hips\", \"inseam\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'title': 'ApparelSizeProfile', 'type': 'object', 'properties': {'chest': {'title': 'Chest', 'type': 'number'}, 'waist': {'title': 'Waist', 'type': 'number'}, 'hips': {'title': 'Hips', 'type': 'number'}, 'inseam': {'title': 'Inseam', 'type': 'number'}}, 'required': ['chest', 'waist', 'hips', 'inseam']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I'm working on setting up a customer profile for our apparel store and I need to store their size information. Could you please generate a JSON object that includes the customer's chest, waist, hips, and inseam measurements? Here are the details for one of our customers: Chest measurement is 38 inches, waist is 32 inches, hips measure 40 inches, and the inseam length is 30 inches. Please respond with a valid JSON object that fits the schema.\", 'role': 'user'}]",
        "completion": "{\n  \"chest\": 38,\n  \"waist\": 32,\n  \"hips\": 40,\n  \"inseam\": 30\n}"
      },
      {
        "augmented": true,
        "json_schema": "{\"title\": \"OfficeSupplyInventoryQuery\", \"type\": \"object\", \"properties\": {\"itemID\": {\"title\": \"Item ID\", \"type\": \"string\"}, \"itemName\": {\"title\": \"Item Name\", \"type\": \"string\"}, \"quantityAvailable\": {\"title\": \"Quantity Available\", \"type\": \"integer\"}, \"reorderThreshold\": {\"title\": \"Reorder Threshold\", \"type\": \"integer\"}}, \"required\": [\"itemID\", \"itemName\", \"quantityAvailable\", \"reorderThreshold\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'title': 'OfficeSupplyInventoryQuery', 'type': 'object', 'properties': {'itemID': {'title': 'Item ID', 'type': 'string'}, 'itemName': {'title': 'Item Name', 'type': 'string'}, 'quantityAvailable': {'title': 'Quantity Available', 'type': 'integer'}, 'reorderThreshold': {'title': 'Reorder Threshold', 'type': 'integer'}}, 'required': ['itemID', 'itemName', 'quantityAvailable', 'reorderThreshold']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I am currently managing the inventory for our office supplies and I need to create a structured JSON object to query our database for the current stock levels. Specifically, I need to check the itemID, itemName, quantityAvailable, and reorderThreshold for each item. Here's an example of the data I have for one of the items: itemID is 'PEN123', itemName is 'Blue Ballpoint Pen', quantityAvailable is 150 units, and the reorderThreshold is set to 50 units. Please respond with a valid JSON object that I can use to query our inventory system.\", 'role': 'user'}]",
        "completion": "{\n  \"itemID\": \"PEN123\",\n  \"itemName\": \"Blue Ballpoint Pen\",\n  \"quantityAvailable\": 150,\n  \"reorderThreshold\": 50\n}"
      },
      {
        "augmented": true,
        "json_schema": "{\"title\": \"LabEquipmentInventory\", \"type\": \"object\", \"properties\": {\"equipmentId\": {\"title\": \"Equipment ID\", \"type\": \"string\"}, \"equipmentType\": {\"title\": \"Equipment Type\", \"type\": \"string\"}, \"location\": {\"title\": \"Location\", \"type\": \"string\"}, \"maintenanceSchedule\": {\"title\": \"Maintenance Schedule\", \"type\": \"string\"}}, \"required\": [\"equipmentId\", \"equipmentType\", \"location\", \"maintenanceSchedule\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'title': 'LabEquipmentInventory', 'type': 'object', 'properties': {'equipmentId': {'title': 'Equipment ID', 'type': 'string'}, 'equipmentType': {'title': 'Equipment Type', 'type': 'string'}, 'location': {'title': 'Location', 'type': 'string'}, 'maintenanceSchedule': {'title': 'Maintenance Schedule', 'type': 'string'}}, 'required': ['equipmentId', 'equipmentType', 'location', 'maintenanceSchedule']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I am currently cataloging the equipment in our biotechnology lab and need to create an inventory list. For each piece of equipment, I need to record its unique identifier, the type of equipment it is, where it's located within the lab, and when its next scheduled maintenance is due. Could you please assist me by generating a JSON object that includes these details? Here's the information for one of the items: The equipment ID is 'BTX-2003', it's a centrifuge, located in 'Room 5', and the next maintenance is scheduled for '2023-07-22'.\", 'role': 'user'}]",
        "completion": "```json\n{\n  \"equipmentId\": \"BTX-2003\",\n  \"equipmentType\": \"centrifuge\",\n  \"location\": \"Room 5\",\n  \"maintenanceSchedule\": \"2023-07-22\"\n}\n```"
      },
      {
        "augmented": true,
        "json_schema": "{\"title\": \"SoftwareLicensingRecord\", \"type\": \"object\", \"properties\": {\"licenseKey\": {\"title\": \"License Key\", \"type\": \"string\"}, \"softwareName\": {\"title\": \"Software Name\", \"type\": \"string\"}, \"licenseType\": {\"title\": \"License Type\", \"type\": \"string\"}, \"issueDate\": {\"title\": \"Issue Date\", \"type\": \"string\", \"format\": \"date\"}, \"expirationDate\": {\"title\": \"Expiration Date\", \"type\": \"string\", \"format\": \"date\"}}, \"required\": [\"licenseKey\", \"softwareName\", \"licenseType\", \"issueDate\", \"expirationDate\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'title': 'SoftwareLicensingRecord', 'type': 'object', 'properties': {'licenseKey': {'title': 'License Key', 'type': 'string'}, 'softwareName': {'title': 'Software Name', 'type': 'string'}, 'licenseType': {'title': 'License Type', 'type': 'string'}, 'issueDate': {'title': 'Issue Date', 'type': 'string', 'format': 'date'}, 'expirationDate': {'title': 'Expiration Date', 'type': 'string', 'format': 'date'}}, 'required': ['licenseKey', 'softwareName', 'licenseType', 'issueDate', 'expirationDate']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"As the software asset coordinator for our company, I need to document the details of a new software licensing record for our internal tracking system. We have recently acquired a software license for 'Visual Studio Enterprise' for our development team. The license key provided to us is 'VS-ENT-987654321', and it's a 'Commercial' type license. The license was issued on '2023-04-01' and it comes with an expiration date of '2024-04-01'. I require a JSON object that encapsulates these details, including the license key, software name, license type, issue date, and expiration date. Please respond with a valid JSON object that adheres to the schema provided.\", 'role': 'user'}]",
        "completion": "```json\n{\n  \"licenseKey\": \"VS-ENT-987654321\",\n  \"softwareName\": \"Visual Studio Enterprise\",\n  \"licenseType\": \"Commercial\",\n  \"issueDate\": \"2023-04-01\",\n  \"expirationDate\": \"2024-04-01\"\n}\n```"
      }
    ],
    "signature_instructions": "```json { \"prefix\": \"To construct a structured JSON object, start by identifying the main elements and key-value pairs in the text.\", \"extract_information\": \"Parse the given text for critical data points, categorizing them into appropriate keys like 'name', 'age', 'occupation', etc. In cases where information is unstructured, deduce meaningful tags to organize it within your JSON structure.\", \"validate_data\": \"Ensure all values adhere to their expected formats (e.g., alphanumeric for names, numerical for ages). Disregard extraneous content that does not contribute to the main objective of data representation.\", \"create_json_object\": \"Compose a valid JSON object encapsulating all relevant information in key-value pairs as cleanly as possible while avoiding unnecessary whitespace or newline characters.\" }, \"data_output\": { \/\/ No initial data provided, placeholder to be updated with extracted key-value pairs from the original text. }```json.dumps(data, separators=(',', ':'))",
    "signature_prefix": "THIS IS AN EXAMPLE SCHEMA:\n```json\n{\n  \"$schema\": \"http:\/\/json-schema.org\/draft-07\/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"flightNumber\": {\"type\": \"string\"},\n    \"departureAirport\": {\"type\": \"string\"},\n    \"arrivalAirport\": {\"type\": \"string\"},\n    \"flightDuration\": {\"type\": \"string\"}\n  },\n  \"required\": [\"flightNumber\", \"departureAirport\", \"arrivalAirport\"]\n}\n```\nTHIS IS AN EXAMPLE COMPLETION:\n```json\n{\n  \"flightNumber\": \"AF113\",\n  \"departureAirport\": \"Charles de Gaulle Airport (CDG)\",\n  \"arrivalAirport\": \"John F. Kennedy International Airport (JFK)\",\n  \"flightDuration\": \"8 hours and 30 minutes\"\n}\n```\nTHIS IS AN EXAMPLE SCHEMA:\n"
  }
}