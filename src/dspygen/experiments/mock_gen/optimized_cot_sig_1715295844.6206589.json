{
  "predictor": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [
      {
        "augmented": true,
        "json_schema": "{\"title\": \"PrefabricatedHouseModel\", \"type\": \"object\", \"properties\": {\"modelName\": {\"title\": \"Model Name\", \"type\": \"string\"}, \"dimensions\": {\"title\": \"Dimensions\", \"type\": \"object\", \"properties\": {\"length\": {\"title\": \"Length\", \"type\": \"number\"}, \"width\": {\"title\": \"Width\", \"type\": \"number\"}, \"height\": {\"title\": \"Height\", \"type\": \"number\"}}, \"required\": [\"length\", \"width\", \"height\"]}, \"price\": {\"title\": \"Price\", \"type\": \"number\"}, \"features\": {\"title\": \"Features\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"modelName\", \"dimensions\", \"price\", \"features\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'title': 'PrefabricatedHouseModel', 'type': 'object', 'properties': {'modelName': {'title': 'Model Name', 'type': 'string'}, 'dimensions': {'title': 'Dimensions', 'type': 'object', 'properties': {'length': {'title': 'Length', 'type': 'number'}, 'width': {'title': 'Width', 'type': 'number'}, 'height': {'title': 'Height', 'type': 'number'}}, 'required': ['length', 'width', 'height']}, 'price': {'title': 'Price', 'type': 'number'}, 'features': {'title': 'Features', 'type': 'array', 'items': {'type': 'string'}}}, 'required': ['modelName', 'dimensions', 'price', 'features']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I'm interested in a prefabricated house model that's suitable for a small family. The model I have in mind is called 'EcoNest'. It should have a compact design with dimensions of 12 meters in length, 7 meters in width, and 3.5 meters in height. The price should be affordable, let's say around 75000 USD. For features, I would like it to include solar panels, a rainwater harvesting system, energy-efficient windows, and a modern kitchen. Could you please provide me with a valid JSON object for this prefabricated house model?\", 'role': 'user'}]",
        "completion": "```json\n{\n  \"modelName\": \"EcoNest\",\n  \"dimensions\": {\n    \"length\": 12,\n    \"width\": 7,\n    \"height\": 3.5\n  },\n  \"price\": 75000,\n  \"features\": [\n    \"solar panels\",\n    \"rainwater harvesting system\",\n    \"energy-efficient windows\",\n    \"modern kitchen\"\n  ]\n}\n```"
      },
      {
        "augmented": true,
        "json_schema": "{\"properties\": {\"seatNumber\": {\"type\": \"string\"}, \"serviceType\": {\"type\": \"string\"}, \"specialInstructions\": {\"type\": \"string\"}}, \"required\": [\"seatNumber\", \"serviceType\"], \"type\": \"object\"}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'properties': {'seatNumber': {'type': 'string'}, 'serviceType': {'type': 'string'}, 'specialInstructions': {'type': 'string'}}, 'required': ['seatNumber', 'serviceType'], 'type': 'object'}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I'm currently on flight LH210 and I'd like to request an in-flight service. My seat number is 12A. I would like to request a vegetarian meal as the service type. For special instructions, please ensure that the meal is gluten-free.\", 'role': 'user'}]",
        "completion": "```json\n{\n  \"seatNumber\": \"12A\",\n  \"serviceType\": \"vegetarian meal\",\n  \"specialInstructions\": \"gluten-free\"\n}\n```"
      },
      {
        "augmented": true,
        "json_schema": "{\"properties\": {\"courseId\": {\"title\": \"Course ID\", \"type\": \"string\"}, \"courseName\": {\"title\": \"Course Name\", \"type\": \"string\"}, \"description\": {\"title\": \"Description\", \"type\": \"string\"}, \"creditHours\": {\"title\": \"Credit Hours\", \"type\": \"integer\"}}, \"required\": [\"courseId\", \"courseName\", \"description\", \"creditHours\"], \"title\": \"CourseCatalogEntry\", \"type\": \"object\"}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'properties': {'courseId': {'title': 'Course ID', 'type': 'string'}, 'courseName': {'title': 'Course Name', 'type': 'string'}, 'description': {'title': 'Description', 'type': 'string'}, 'creditHours': {'title': 'Credit Hours', 'type': 'integer'}}, 'required': ['courseId', 'courseName', 'description', 'creditHours'], 'title': 'CourseCatalogEntry', 'type': 'object'}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I am compiling a course catalog for our university's Diversified Consumer Services program and need to create a structured data entry for each course. Could you assist me by generating a JSON object for a course catalog entry? The entry should include the course ID, course name, description, and credit hours. For example, one of the courses is 'Introduction to Consumer Services', with the ID 'CS101', a description that covers the basics of consumer services in various industries, including retail, hospitality, and personal services. Students will learn about the importance of customer service, the role of consumer behavior in service design, and the impact of technology on consumer interactions, and it is a 3-credit hour course.\", 'role': 'user'}]",
        "completion": "```json\n{\n  \"courseId\": \"CS101\",\n  \"courseName\": \"Introduction to Consumer Services\",\n  \"description\": \"This course covers the basics of consumer services in various industries, including retail, hospitality, and personal services. Students will learn about the importance of customer service, the role of consumer behavior in service design, and the impact of technology on consumer interactions.\",\n  \"creditHours\": 3\n}\n```"
      },
      {
        "augmented": true,
        "json_schema": "{\"type\": \"object\", \"properties\": {\"orderId\": {\"type\": \"string\"}, \"items\": {\"type\": \"array\", \"items\": {\"type\": \"object\", \"properties\": {\"name\": {\"type\": \"string\"}, \"price\": {\"type\": \"number\", \"minimum\": 0}}}}}, \"required\": [\"orderId\", \"items\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'type': 'object', 'properties': {'orderId': {'type': 'string'}, 'items': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'price': {'type': 'number', 'minimum': 0}}}}}, 'required': ['orderId', 'items']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I recently made a purchase on your ecommerce platform and I'd like to generate a JSON object for my order. The order ID is 'ORD10234' and it included three items. The first item is a 'Wireless Mouse' priced at $15.99, the second item is a 'Bluetooth Keyboard' priced at $29.99, and the third item is a 'Webcam HD' priced at $45.50. Please respond with a valid JSON object for this order.\", 'role': 'user'}]",
        "completion": "```json\n{\n  \"orderId\": \"ORD10234\",\n  \"items\": [\n    {\n      \"name\": \"Wireless Mouse\",\n      \"price\": 15.99\n    },\n    {\n      \"name\": \"Bluetooth Keyboard\",\n      \"price\": 29.99\n    },\n    {\n      \"name\": \"Webcam HD\",\n      \"price\": 45.50\n    }\n  ]\n}\n```"
      }
    ],
    "signature_instructions": "```json { \"prefix\": \"To construct a structured JSON object, start by identifying the main elements and key-value pairs in the text.\", \"extract_information\": \"Parse the given text for critical data points, categorizing them into appropriate keys like 'name', 'age', 'occupation', etc. In cases where information is unstructured, deduce meaningful tags to organize it within your JSON structure.\", \"validate_data\": \"Ensure all values adhere to their expected formats (e.g., alphanumeric for names, numerical for ages). Disregard extraneous content that does not contribute to the main objective of data representation.\", \"create_json_object\": \"Compose a valid JSON object encapsulating all relevant information in key-value pairs as cleanly as possible while avoiding unnecessary whitespace or newline characters.\" }, \"data_output\": { \/\/ No initial data provided, placeholder to be updated with extracted key-value pairs from the original text. }```json.dumps(data, separators=(',', ':'))",
    "signature_prefix": "THIS IS AN EXAMPLE SCHEMA:\n```json\n{\n  \"$schema\": \"http:\/\/json-schema.org\/draft-07\/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"flightNumber\": {\"type\": \"string\"},\n    \"departureAirport\": {\"type\": \"string\"},\n    \"arrivalAirport\": {\"type\": \"string\"},\n    \"flightDuration\": {\"type\": \"string\"}\n  },\n  \"required\": [\"flightNumber\", \"departureAirport\", \"arrivalAirport\"]\n}\n```\nTHIS IS AN EXAMPLE COMPLETION:\n```json\n{\n  \"flightNumber\": \"AF113\",\n  \"departureAirport\": \"Charles de Gaulle Airport (CDG)\",\n  \"arrivalAirport\": \"John F. Kennedy International Airport (JFK)\",\n  \"flightDuration\": \"8 hours and 30 minutes\"\n}\n```\nTHIS IS AN EXAMPLE SCHEMA:\n"
  }
}