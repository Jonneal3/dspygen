{
  "predictor": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [
      {
        "augmented": true,
        "json_schema": "{\"title\": \"VideoGameInventory\", \"type\": \"object\", \"properties\": {\"gameId\": {\"title\": \"Game ID\", \"type\": \"string\"}, \"title\": {\"title\": \"Title\", \"type\": \"string\"}, \"platform\": {\"title\": \"Platform\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"availability\": {\"title\": \"Availability\", \"type\": \"boolean\"}, \"price\": {\"title\": \"Price\", \"type\": \"number\"}}, \"required\": [\"gameId\", \"title\", \"platform\", \"availability\", \"price\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'title': 'VideoGameInventory', 'type': 'object', 'properties': {'gameId': {'title': 'Game ID', 'type': 'string'}, 'title': {'title': 'Title', 'type': 'string'}, 'platform': {'title': 'Platform', 'type': 'array', 'items': {'type': 'string'}}, 'availability': {'title': 'Availability', 'type': 'boolean'}, 'price': {'title': 'Price', 'type': 'number'}}, 'required': ['gameId', 'title', 'platform', 'availability', 'price']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I'm organizing our video game inventory and I need to generate a JSON object for each game in our system. The inventory should include the game's unique identifier, the title of the game, the platform it's available on, whether it's currently available for purchase, and the price. For example, we have a game with the identifier 'VG12345', titled 'Space Quest', available on 'PC' and 'Console'. It is currently available, and the price is set at 29.99 USD. Please provide a JSON object with this information.\", 'role': 'user'}]",
        "completion": "{\n  \"gameId\": \"VG12345\",\n  \"title\": \"Space Quest\",\n  \"platform\": [\"PC\", \"Console\"],\n  \"availability\": true,\n  \"price\": 29.99\n}"
      },
      {
        "augmented": true,
        "json_schema": "{\"properties\": {\"sku\": {\"title\": \"SKU\", \"type\": \"string\"}, \"productName\": {\"title\": \"Product Name\", \"type\": \"string\"}, \"newStockLevel\": {\"title\": \"New Stock Level\", \"type\": \"integer\"}, \"restockDate\": {\"title\": \"Restock Date\", \"type\": \"string\", \"format\": \"date\"}}, \"required\": [\"sku\", \"productName\", \"newStockLevel\"], \"title\": \"InventoryUpdate\", \"type\": \"object\"}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'properties': {'sku': {'title': 'SKU', 'type': 'string'}, 'productName': {'title': 'Product Name', 'type': 'string'}, 'newStockLevel': {'title': 'New Stock Level', 'type': 'integer'}, 'restockDate': {'title': 'Restock Date', 'type': 'string', 'format': 'date'}}, 'required': ['sku', 'productName', 'newStockLevel'], 'title': 'InventoryUpdate', 'type': 'object'}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I am currently updating our retail store's inventory system and need to construct a JSON object for each item that requires an update. For a specific product, the SKU is 'ABC123', the product name is 'UltraBoost Running Shoes', the new stock level is 25 units, and the restock date is scheduled for April 15, 2023. Please provide me with a valid JSON object that adheres to the schema for an inventory update.\", 'role': 'user'}]",
        "completion": "{\n  \"sku\": \"ABC123\",\n  \"productName\": \"UltraBoost Running Shoes\",\n  \"newStockLevel\": 25,\n  \"restockDate\": \"2023-04-15\"\n}"
      },
      {
        "augmented": true,
        "json_schema": "{\"title\": \"MultiLineInsurancePolicy\", \"type\": \"object\", \"properties\": {\"policyholder\": {\"type\": \"object\", \"properties\": {\"name\": {\"type\": \"string\"}, \"address\": {\"type\": \"string\"}, \"phone\": {\"type\": \"string\"}}, \"required\": [\"name\", \"address\", \"phone\"]}, \"coverageDetails\": {\"type\": \"array\", \"items\": {\"type\": \"object\", \"properties\": {\"coverageType\": {\"type\": \"string\"}, \"coverageAmount\": {\"type\": \"number\"}}, \"required\": [\"coverageType\", \"coverageAmount\"]}}, \"premium\": {\"type\": \"object\", \"properties\": {\"amount\": {\"type\": \"number\"}, \"frequency\": {\"type\": \"string\"}}, \"required\": [\"amount\", \"frequency\"]}}, \"required\": [\"policyholder\", \"coverageDetails\", \"premium\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'title': 'MultiLineInsurancePolicy', 'type': 'object', 'properties': {'policyholder': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'address': {'type': 'string'}, 'phone': {'type': 'string'}}, 'required': ['name', 'address', 'phone']}, 'coverageDetails': {'type': 'array', 'items': {'type': 'object', 'properties': {'coverageType': {'type': 'string'}, 'coverageAmount': {'type': 'number'}}, 'required': ['coverageType', 'coverageAmount']}}, 'premium': {'type': 'object', 'properties': {'amount': {'type': 'number'}, 'frequency': {'type': 'string'}}, 'required': ['amount', 'frequency']}}, 'required': ['policyholder', 'coverageDetails', 'premium']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"Please assist me by generating a JSON object for a multi-line insurance policy I'm setting up. The policyholder's name is Emily Carter, residing at 254 Ocean View Lane, Coastal City, CC 90210, with a contact number of (555) 123-4567. The policy includes three types of coverage: 'Homeowners' with a coverage amount of $350,000, 'Auto Collision' with a coverage amount of $50,000, and 'Personal Liability' with a coverage amount of $100,000. The premium for this policy is set at $2,500, payable semi-annually.\", 'role': 'user'}]",
        "completion": "{\n  \"policyholder\": {\n    \"name\": \"Emily Carter\",\n    \"address\": \"254 Ocean View Lane, Coastal City, CC 90210\",\n    \"phone\": \"(555) 123-4567\"\n  },\n  \"coverageDetails\": [\n    {\n      \"coverageType\": \"Homeowners\",\n      \"coverageAmount\": 350000\n    },\n    {\n      \"coverageType\": \"Auto Collision\",\n      \"coverageAmount\": 50000\n    },\n    {\n      \"coverageType\": \"Personal Liability\",\n      \"coverageAmount\": 100000\n    }\n  ],\n  \"premium\": {\n    \"amount\": 2500,\n    \"frequency\": \"semi-annually\"\n  }\n}"
      },
      {
        "augmented": true,
        "json_schema": "{\"cropType\": \"string\", \"harvestedArea\": \"number\", \"yield\": \"number\", \"productionDate\": \"string\"}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'cropType': 'string', 'harvestedArea': 'number', 'yield': 'number', 'productionDate': 'string'}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I'm working on a report for our agricultural department and I need to include a detailed crop production report for our recent harvest. The crop we harvested was wheat, and the total area we harvested was 250 hectares. The average yield we achieved was 7.8 tonnes per hectare. The harvest was completed on September 20, 2023. Could you please provide me with a JSON object that contains these details following the provided schema?\", 'role': 'user'}]",
        "completion": "{\n    \"cropType\": \"wheat\",\n    \"harvestedArea\": 250,\n    \"yield\": 7.8,\n    \"productionDate\": \"2023-09-20\"\n}"
      }
    ],
    "signature_instructions": "```json\n{\n  \"prefix\": \"To construct a structured JSON object, start by identifying the main elements and key-value pairs in the text.\",\n  \"extract_information\": \"Parse the given text for critical data points, categorizing them into appropriate keys like 'name', 'age', 'occupation', etc. In cases where information is unstructured, deduce meaningful tags to organize it within your JSON structure.\",\n  \"validate_data\": \"Ensure all values adhere to their expected formats (e.g., alphanumeric for names, numerical for ages). Disregard extraneous content that does not contribute to the main objective of data representation.\",\n  \"create_json_object\": \"Compose a valid JSON object encapsulating all relevant information in key-value pairs as cleanly as possible while avoiding unnecessary whitespace or newline characters.\",\n}\n```\n",
    "signature_prefix": "THIS IS ```json``` FOR \"Prompt\" BASED ON THE \"Json Schema\": "
  }
}