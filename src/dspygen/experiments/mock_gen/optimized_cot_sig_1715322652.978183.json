{
  "predictor": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [
      {
        "augmented": true,
        "json_schema": "{\"properties\": {\"SKU\": {\"title\": \"SKU\", \"type\": \"string\"}, \"quantity\": {\"title\": \"Quantity\", \"type\": \"integer\"}, \"restockDate\": {\"format\": \"date\", \"title\": \"Restock Date\", \"type\": \"string\"}, \"supplier\": {\"title\": \"Supplier\", \"type\": \"string\"}}, \"required\": [\"SKU\", \"quantity\", \"restockDate\", \"supplier\"], \"title\": \"TobaccoInventoryUpdate\", \"type\": \"object\"}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'properties': {'SKU': {'title': 'SKU', 'type': 'string'}, 'quantity': {'title': 'Quantity', 'type': 'integer'}, 'restockDate': {'format': 'date', 'title': 'Restock Date', 'type': 'string'}, 'supplier': {'title': 'Supplier', 'type': 'string'}}, 'required': ['SKU', 'quantity', 'restockDate', 'supplier'], 'title': 'TobaccoInventoryUpdate', 'type': 'object'}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I'm managing the inventory for our tobacco products and need to update our system with the latest stock information. Could you assist me by generating a JSON output that includes the SKU, quantity, restockDate, and supplier for each product? Here are the details for the update: SKU: 'TOB-1928', quantity: 150, restockDate: '2023-04-15', supplier: 'Global Tobacco Ltd.' Please ensure the JSON output is structured according to the schema requirements.\", 'role': 'user'}]",
        "step_by_step_instructions": "```json\n{\n  \"SKU\": \"TOB-1928\",\n  \"quantity\": 150,\n  \"restockDate\": \"2023-04-15\",\n  \"supplier\": \"Global Tobacco Ltd.\"\n}\n```",
        "constructed_json_object": "```json\n{\n  \"SKU\": \"TOB-1928\",\n  \"quantity\": 150,\n  \"restockDate\": \"2023-04-15\",\n  \"supplier\": \"Global Tobacco Ltd.\"\n}\n```"
      },
      {
        "augmented": true,
        "json_schema": "{\"title\": \"MobileSubscriber\", \"type\": \"object\", \"properties\": {\"subscriberID\": {\"title\": \"Subscriber ID\", \"type\": \"string\"}, \"phoneNumber\": {\"title\": \"Phone Number\", \"type\": \"string\"}, \"planType\": {\"title\": \"Plan Type\", \"type\": \"string\"}, \"activationDate\": {\"title\": \"Activation Date\", \"type\": \"string\", \"format\": \"date\"}}, \"required\": [\"subscriberID\", \"phoneNumber\", \"planType\", \"activationDate\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'title': 'MobileSubscriber', 'type': 'object', 'properties': {'subscriberID': {'title': 'Subscriber ID', 'type': 'string'}, 'phoneNumber': {'title': 'Phone Number', 'type': 'string'}, 'planType': {'title': 'Plan Type', 'type': 'string'}, 'activationDate': {'title': 'Activation Date', 'type': 'string', 'format': 'date'}}, 'required': ['subscriberID', 'phoneNumber', 'planType', 'activationDate']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I've just signed up for a new mobile subscription with Globex Telecom and I need to create a structured JSON object for my records and potential API integrations. My new subscriber ID is 'GTX-908472-MN', my assigned phone number is '+1234567890', I chose the 'Unlimited Data Plus' plan, and my service was activated on '2023-04-15'. Please generate a JSON object with these details.\", 'role': 'user'}]",
        "step_by_step_instructions": "To convert the provided text into a valid JSON object that adheres to the specified schema, follow these steps:\n\n1. Identify key-value pairs from the given information.\n2. Ensure all required fields are included in the resulting JSON object as per the 'required' array in the schema.\n3. Match data types with their expected format according to the schema (e.g., strings for IDs, phone numbers, and plan type; date string for activationDate).\n4. Enclose the entire JSON structure within curly braces `{}`.\n5. Separate items using commas `,` where applicable.\n6. Use colons `:`, to separate keys from their corresponding values.\n7. Wrap all string literals in double quotes `\"`.\n\nFollowing these steps, the constructed JSON object is:\n\n```json\n{\n  \"subscriberID\": \"GTX-908472-MN\",\n  \"phoneNumber\": \"+1234567890\",\n  \"planType\": \"Unlimited Data Plus\",\n  \"activationDate\": \"2023-04-15\"\n}\n```",
        "constructed_json_object": "{\n  \"subscriberID\": \"GTX-908472-MN\",\n  \"phoneNumber\": \"+1234567890\",\n  \"planType\": \"Unlimited Data Plus\",\n  \"activationDate\": \"2023-04-15\"\n}"
      },
      {
        "augmented": true,
        "json_schema": "{\"title\": \"StockPriceQuery\", \"type\": \"object\", \"properties\": {\"symbol\": {\"title\": \"Symbol\", \"type\": \"string\"}, \"dateRange\": {\"title\": \"Date Range\", \"type\": \"object\", \"properties\": {\"startDate\": {\"format\": \"date\", \"title\": \"Start Date\", \"type\": \"string\"}, \"endDate\": {\"format\": \"date\", \"title\": \"End Date\", \"type\": \"string\"}}, \"required\": [\"startDate\", \"endDate\"]}, \"dataSource\": {\"title\": \"Data Source\", \"type\": \"string\"}}, \"required\": [\"symbol\", \"dateRange\", \"dataSource\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'title': 'StockPriceQuery', 'type': 'object', 'properties': {'symbol': {'title': 'Symbol', 'type': 'string'}, 'dateRange': {'title': 'Date Range', 'type': 'object', 'properties': {'startDate': {'format': 'date', 'title': 'Start Date', 'type': 'string'}, 'endDate': {'format': 'date', 'title': 'End Date', 'type': 'string'}}, 'required': ['startDate', 'endDate']}, 'dataSource': {'title': 'Data Source', 'type': 'string'}}, 'required': ['symbol', 'dateRange', 'dataSource']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"I am currently analyzing the stock market trends and need to query the stock prices for a specific company. The company I'm interested in is Tesla, Inc. and I would like to retrieve the stock price data for the last quarter. The ticker symbol for Tesla is 'TSLA'. I need the stock prices from January 1st, 2023, to March 31st, 2023. The data source I prefer to use is 'NASDAQ'. Please respond with a valid JSON object that includes these details and adheres to the schema provided.\", 'role': 'user'}]",
        "step_by_step_instructions": "```json\n{\n  \"symbol\": \"TSLA\",\n  \"dateRange\": {\n    \"startDate\": \"2023-01-01\",\n    \"endDate\": \"2023-03-31\"\n  },\n  \"dataSource\": \"NASDAQ\"\n}\n```",
        "constructed_json_object": "```json\n{\n  \"symbol\": \"TSLA\",\n  \"dateRange\": {\n    \"startDate\": \"2023-01-01\",\n    \"endDate\": \"2023-03-31\"\n  },\n  \"dataSource\": \"NASDAQ\"\n}\n```"
      },
      {
        "augmented": true,
        "json_schema": "{\"title\": \"ShipmentStatusTracker\", \"type\": \"object\", \"properties\": {\"shipmentID\": {\"title\": \"Shipment ID\", \"type\": \"string\"}, \"componentID\": {\"title\": \"Component ID\", \"type\": \"string\"}, \"status\": {\"title\": \"Status\", \"type\": \"string\", \"enum\": [\"ordered\", \"shipped\", \"in transit\", \"delivered\", \"delayed\"]}, \"estimatedDelivery\": {\"title\": \"Estimated Delivery\", \"type\": \"string\", \"format\": \"date\"}}, \"required\": [\"shipmentID\", \"componentID\", \"status\", \"estimatedDelivery\"]}",
        "prompt": "[{'content': \"You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n{'title': 'ShipmentStatusTracker', 'type': 'object', 'properties': {'shipmentID': {'title': 'Shipment ID', 'type': 'string'}, 'componentID': {'title': 'Component ID', 'type': 'string'}, 'status': {'title': 'Status', 'type': 'string', 'enum': ['ordered', 'shipped', 'in transit', 'delivered', 'delayed']}, 'estimatedDelivery': {'title': 'Estimated Delivery', 'type': 'string', 'format': 'date'}}, 'required': ['shipmentID', 'componentID', 'status', 'estimatedDelivery']}\\n<\/schema>\\n\", 'role': 'system'}, {'content': \"Hello, I am currently managing logistics for our company's electronic components division. We need to track the shipment status of our products more efficiently. I require a JSON object that can capture the following details for each shipment: a unique 'shipmentID', the 'componentID' of the product being shipped, the current 'status' of the shipment (which can be 'ordered', 'shipped', 'in transit', 'delivered', or 'delayed'), and the 'estimatedDelivery' date in a standard date format. For example, we have a shipment with ID 'SH12345', containing component 'COMP-4567', which is currently 'in transit' and is estimated to be delivered on '2023-05-20'. Please provide a JSON object that includes these details.\", 'role': 'user'}]",
        "step_by_step_instructions": "```json\n{\n  \"shipmentID\": \"SH12345\",\n  \"componentID\": \"COMP-4567\",\n  \"status\": \"in transit\",\n  \"estimatedDelivery\": \"2023-05-20\"\n}\n```",
        "constructed_json_object": "```json\n{\n  \"shipmentID\": \"SH12345\",\n  \"componentID\": \"COMP-4567\",\n  \"status\": \"in transit\",\n  \"estimatedDelivery\": \"2023-05-20\"\n}\n```"
      }
    ],
    "signature_instructions": "\n    Proposed Instruction: Transform the provided text with key-value pairs into a valid JSON object that conforms to the specified JSON schema. Ensure all required fields are included and that data types match the expected format in the schema. Use curly braces to encapsulate your resulting JSON structure, commas to separate items within an array, colons to separate keys from values, and quotation marks for string literals.\n    ",
    "signature_prefix": "Constructed JSON Object with all required properties:\n```json\n"
  },
  "retry_predictor": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [],
    "signature_instructions": "\n    This signature is designed to handle errors in JSON object construction by focusing on identifying and rectifying the errors in the JSON output. The model uses this signature to understand the nature of the error and to guide the correction process in a retry mechanism. This is crucial for tasks requiring high accuracy in data format and structure adherence to a JSON schema.\n\n    Instructions: Review the incorrect JSON object, identify the mismatches against the specified JSON schema, and modify the text or processing logic to correct these errors. The goal is to refine the JSON output in subsequent iterations until it fully complies with the JSON schema.\n    ",
    "signature_prefix": "Corrected JSON Object:\n```json\n"
  }
}